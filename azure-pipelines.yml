trigger:
  batch: true
  branches:
    include:
    - master
    - releases/*
    - features/*
  paths:
    exclude: [ 'README.md' ]

jobs:
- job: TestLinux
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: 3.7

    - script: |
          set -e
          sudo apt-get update
          sudo apt-get install libusb-1.0-0-dev libudev-dev
          python3 -m pip install pysqlite3-binary
      displayName: 'prepare for electrumsv'
      workingDirectory: electrumsv-sdk/

    - script: |
        set -e
        python3 -m pip install wheel
        python3 -m pip install -e .
        python3 -m pip install pytest pytest-cov
      displayName: 'install sdk'
      workingDirectory: electrumsv-sdk/

    - script: |
        set -e
        python3 -m pip install -U pylint
        python3 -m pylint --rcfile ./.pylintrc ./electrumsv-sdk
        if [ $? -gt 0 ]
        then
          # https://docs.pylint.org/en/1.6.0/run.html#exit-codes
          echo "##vso[task.complete result=Failed;]DONE"
        fi
      continueOnError: true
      displayName: 'pylint'

    - script: |
        set -e
        sudo apt-get update
        sudo apt install npm nodejs node-gyp nodejs-dev
        sudo apt-get install libssl1.0-dev
      displayName: 'prepare node.js'
      workingDirectory: electrumsv-sdk/

    # Download a secure file to the agent machine
    - task: DownloadSecureFile@1
      name: pfxCertificate
      displayName: 'Download CA certificate'
      inputs:
        secureFile: 'localhost.pfx'

    - script: |
        set -e
        electrumsv-sdk install node
        electrumsv-sdk install electrumx
        electrumsv-sdk install electrumsv
        electrumsv-sdk install whatsonchain
        electrumsv-sdk install --ssl-pfx=$(pfxCertificate.secureFilePath) merchant_api
      displayName: 'install all components'
      workingDirectory: electrumsv-sdk/

    - script: |
        set -e
        electrumsv-sdk start --background status_monitor
        electrumsv-sdk start --background --new node
        electrumsv-sdk start --background --new electrumx
        electrumsv-sdk start --background --new electrumsv
        electrumsv-sdk node generate 1
        electrumsv-sdk start --background whatsonchain
        electrumsv-sdk start --background merchant_api
      displayName: 'start all components'
      workingDirectory: electrumsv-sdk/

    - script: |
        set -e
        electrumsv-sdk stop node
        electrumsv-sdk stop electrumx
        electrumsv-sdk stop electrumsv
        electrumsv-sdk stop whatsonchain
        electrumsv-sdk stop status_monitor
      displayName: 'stop all components'
      workingDirectory: electrumsv-sdk/

    - script: |
        set -e
        sleep 5
        electrumsv-sdk reset
      displayName: 'reset all components'
      workingDirectory: electrumsv-sdk/

    - script: |
        set -e
        sleep 5
        electrumsv-sdk reset --id=node1
        electrumsv-sdk reset --id=electrumx1
        electrumsv-sdk reset --id=electrumsv1
      displayName: 'reset by id'
      workingDirectory: electrumsv-sdk/

- job: TestMacOS
  pool:
    vmImage: 'macOS-latest'
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: 3.7

    - script: |
          brew upgrade sqlite3
      displayName: 'prepare for electrumsv'
      workingDirectory: electrumsv-sdk/

    - script: |
        set -e
        python3 -m pip install wheel
        python3 -m pip install -e .
        python3 -m pip install pytest pytest-cov
      displayName: 'install sdk'
      workingDirectory: electrumsv-sdk/

    # Download a secure file to the agent machine
    - task: DownloadSecureFile@1
      name: pfxCertificate
      displayName: 'Download CA certificate'
      inputs:
        secureFile: 'localhost.pfx'

    - script: |
        set -e
        brew install node
      displayName: 'prepare node.js'
      workingDirectory: electrumsv-sdk/

    - script: |
        set -e
        electrumsv-sdk install node
        electrumsv-sdk install electrumx
        electrumsv-sdk install electrumsv
        electrumsv-sdk install whatsonchain
        electrumsv-sdk install --ssl-pfx=$(pfxCertificate.secureFilePath) merchant_api
      displayName: 'install all components'
      workingDirectory: electrumsv-sdk/

    - script: |
        set -e
        electrumsv-sdk start --background status_monitor
        electrumsv-sdk start --background --new node
        electrumsv-sdk start --background --new electrumx
        electrumsv-sdk start --background --new electrumsv
        electrumsv-sdk node generate 1
        electrumsv-sdk start --background whatsonchain
        electrumsv-sdk start --background merchant_api
      displayName: 'start all components'
      workingDirectory: electrumsv-sdk/

    - script: |
        set -e
        electrumsv-sdk stop node
        electrumsv-sdk stop electrumx
        electrumsv-sdk stop electrumsv
        electrumsv-sdk stop whatsonchain
        electrumsv-sdk stop status_monitor
      displayName: 'stop all components'
      workingDirectory: electrumsv-sdk/

    - script: |
        set -e
        sleep 5
        electrumsv-sdk reset
      displayName: 'reset all components'
      workingDirectory: electrumsv-sdk/

    - script: |
        set -e
        sleep 5
        electrumsv-sdk reset --id=node1
        electrumsv-sdk reset --id=electrumx1
        electrumsv-sdk reset --id=electrumsv1
      displayName: 'reset by id'
      workingDirectory: electrumsv-sdk/

- job: TestWindows
  pool: {vmImage: 'windows-latest'}
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: 3.7
        addToPath: true
        architecture: 'x64'

    # need to add python Scripts/ dir to PATH to find 'electrumsv-sdk' command
    - pwsh: |
        $scripts_dir = py -3.7 -c "import os, sys, pathlib;print(pathlib.Path(sys.executable).parent.joinpath(r'Scripts'));"
        $env:PATH += $scripts_dir
        py -3.7 -m pip install --upgrade pip
        py -3.7 -m pip install wheel
        py -3.7 -m pip install -e .
        py -3.7 -m pip install pytest pytest-cov
      displayName: 'install sdk'
      workingDirectory: electrumsv-sdk/

    # Download a secure file to the agent machine
    - task: DownloadSecureFile@1
      name: pfxCertificate
      displayName: 'Download CA certificate'
      inputs:
        secureFile: 'localhost.pfx'

    - script: |
        electrumsv-sdk install node
        electrumsv-sdk install electrumx
        electrumsv-sdk install electrumsv
        electrumsv-sdk install whatsonchain
        electrumsv-sdk install --ssl-pfx=$(pfxCertificate.secureFilePath) merchant_api
      displayName: 'install all components'
      workingDirectory: electrumsv-sdk/

    - script: |
        electrumsv-sdk start --background status_monitor
        electrumsv-sdk start --background --new node
        electrumsv-sdk start --background --new electrumx
        electrumsv-sdk start --background --new electrumsv
        electrumsv-sdk node generate 1
        electrumsv-sdk start --background whatsonchain
        electrumsv-sdk start --background merchant_api
      displayName: 'start all components'
      workingDirectory: electrumsv-sdk/

    - script: |
        electrumsv-sdk stop node
        electrumsv-sdk stop electrumx
        electrumsv-sdk stop electrumsv
        electrumsv-sdk stop whatsonchain
        electrumsv-sdk stop status_monitor
      displayName: 'stop all components'
      workingDirectory: electrumsv-sdk/

    - script: |
        sleep 5
        electrumsv-sdk reset
      displayName: 'reset all components'
      workingDirectory: electrumsv-sdk/

    - script: |
        sleep 5
        electrumsv-sdk reset --id=node1
        electrumsv-sdk reset --id=electrumx1
        electrumsv-sdk reset --id=electrumsv1
      displayName: 'reset by id'
      workingDirectory: electrumsv-sdk/


- job: BuildMacOS
  pool: {vmImage: 'macOS-10.15'}
  steps:
    - script: |
        python3 -m pip install --upgrade pip
        python3 -m pip install wheel
        python3 setup.py build bdist_wheel --plat-name macosx_10_5_x86_64 --dist-dir ../wheelhouse
      workingDirectory: electrumsv-sdk/

    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: 'MacOS'
        pathtoPublish: 'wheelhouse'
      displayName: 'build wheel macos'

- job: BuildWindows
  pool: {vmImage: 'windows-latest'}
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: 3.7

    - script: |
        py -3 -m pip install --upgrade pip
        py -3 -m pip install wheel
        py -3 .\setup.py build bdist_wheel --plat-name win-amd64 --dist-dir ../wheelhouse
      workingDirectory: electrumsv-sdk/

    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: 'Windows'
        pathtoPublish: 'wheelhouse'
      displayName: 'build wheel windows'

- job: BuildWindowsx86
  pool: {vmImage: 'windows-latest'}
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: 3.7
        architecture: x86

    - script: |
        py -3 -m pip install --upgrade pip
        py -3 -m pip install wheel
        py -3 .\setup.py build bdist_wheel --plat-name win32 --dist-dir ../wheelhouse
      workingDirectory: electrumsv-sdk/

    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: 'Windowsx86'
        pathtoPublish: 'wheelhouse'
      displayName: 'build wheel windowsx86'

- job: BuildLinux
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: 3.7

    - bash: |
        python3 -m pip install --upgrade pip
        python3 -m pip install wheel
        python3 setup.py build bdist_wheel --plat-name manylinux2014_x86_64 --dist-dir ../wheelhouse
      workingDirectory: electrumsv-sdk/

    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: 'Linux'
        pathtoPublish: 'wheelhouse'
      displayName: 'build wheel linux'
