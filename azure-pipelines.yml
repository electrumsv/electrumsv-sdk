trigger:
  batch: true
  branches:
    include:
    - master
    - releases/*
    - features/*
  paths:
    exclude: [ 'README.md' ]


resources:
  containers:
  - container: pg12
    image: postgres:12
    ports:
      - 5432:5432
    env:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres

  - container: pg12-win32
    image: stellirin/postgres-windows:12
    ports:
      - 5432:5432
    env:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres

jobs:
- job: TestLinux
  pool:
    vmImage: 'ubuntu-latest'

  services:
    postgres: pg12

  variables:
    MODIFIED_SDK_HOME_DIR:  $(Agent.HomeDirectory)/my_portable_sdk_datadir
    NEW_LOG_DIR:            $(Agent.HomeDirectory)/my_portable_sdk_datadir/logs
    SDK_LOG_LEVEL:          DEBUG

  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: 3.9

    - script: |
          set -e
          sudo apt-get update
          sudo apt-get install libusb-1.0-0-dev libudev-dev
          python3 -m pip install pysqlite3-binary
      displayName: 'prepare for electrumsv'

    - script: |
        set -e
        python3 -m pip install wheel
        python3 -m pip install -e .
        python3 -m pip install pytest pytest-cov
      displayName: 'install electrumsv-sdk'

    - script: |
        set -e
        electrumsv-sdk config --sdk-home-dir=$(MODIFIED_SDK_HOME_DIR)
      displayName: 'configure for portable sdk-home-dir'

    - bash: |
        cd $(Build.Repository.LocalPath)/contrib/azure
        python3 -m pip install asyncpg
        python3 ./mapi_db_config.py
      displayName: 'prepare postgres'

    - script: |
        set -e
        python3 -m pip install -U pylint
        python3 -m pylint --rcfile ./.pylintrc ./electrumsv-sdk
        if [ $? -gt 0 ]
        then
          # https://docs.pylint.org/en/1.6.0/run.html#exit-codes
          echo "##vso[task.complete result=Failed;]DONE"
        fi
      continueOnError: true
      displayName: 'pylint'

    - script: |
        python3 -m pip install mypy
        yes | python3 -m mypy --install-types
        python3 -m mypy --config-file mypy.ini
      continueOnError: true
      displayName: 'mypy static analysis'

    - script: |
        set -e
        sudo apt-get update
        sudo apt install npm nodejs node-gyp
      displayName: 'prepare node.js'
      continueOnError: true

    - script: |
        set -e
        electrumsv-sdk install node
        electrumsv-sdk install electrumx
        electrumsv-sdk install electrumsv
        electrumsv-sdk install whatsonchain
        electrumsv-sdk install merchant_api
      displayName: 'install all components'

    - script: |
        set -e
        electrumsv-sdk start --background status_monitor
        electrumsv-sdk start --background --new node
        electrumsv-sdk start --background --new electrumx
        electrumsv-sdk start --background --new --deterministic-seed electrumsv
        electrumsv-sdk node generate 1
        electrumsv-sdk start --background whatsonchain
        electrumsv-sdk start --background merchant_api
        electrumsv-sdk status
        python3 ./contrib/check_all_started.py
      displayName: 'start all components'
      continueOnError: true

    - script: |
        set -e
        electrumsv-sdk stop node
        electrumsv-sdk stop electrumx
        electrumsv-sdk stop electrumsv
        electrumsv-sdk stop whatsonchain
        electrumsv-sdk stop status_monitor
        electrumsv-sdk stop merchant_api
        electrumsv-sdk status
        python3 ./contrib/check_all_stopped.py
      displayName: 'stop all components'
      continueOnError: true

    - script: |
        set -e
        sleep 5
        electrumsv-sdk reset
        electrumsv-sdk status
      displayName: 'reset all components'
      continueOnError: true

    - script: |
        set -e
        sleep 5
        electrumsv-sdk reset --id=node1 node
        electrumsv-sdk reset --id=electrumx1 electrumx
        electrumsv-sdk reset --id=electrumsv1 --deterministic-seed electrumsv
        electrumsv-sdk status
      displayName: 'reset by id'
      continueOnError: true

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: $(NEW_LOG_DIR)
        artifactName: 'LinuxLogs'
      displayName: 'Publish logs'


- job: TestMacOS
  timeoutInMinutes: 15

  pool:
    vmImage: 'macOS-latest'

  variables:
    MODIFIED_SDK_HOME_DIR:  $(Agent.HomeDirectory)/my_portable_sdk_datadir
    NEW_LOG_DIR:            $(Agent.HomeDirectory)/my_portable_sdk_datadir/logs
    SDK_LOG_LEVEL:          DEBUG

  steps:
    # https://stackoverflow.com/questions/27700596/homebrew-postgres-broken
    - bash: |
        brew install postgresql

        rm -rf /usr/local/var/postgres
        mkdir /usr/local/var/postgres
        chmod 0700 /usr/local/var/postgres

        echo postgres > pwfile.txt
        initdb --username=postgres --pwfile=pwfile.txt /usr/local/var/postgres
        echo 'export PATH="/usr/local/opt/postgresql/bin:$PATH"' >> /Users/runner/.bash_profile
        export PKG_CONFIG_PATH="/usr/local/opt/postgresql/lib/pkgconfig"

        pg_ctl -D /usr/local/var/postgres start
        psql -U postgres --list
        psql -U postgres -c "\du"

        cd $(Build.Repository.LocalPath)/contrib/azure
        python3 -m pip install asyncpg
        python3 ./mapi_db_config.py
      displayName: 'install postgres'

    - task: UsePythonVersion@0
      inputs:
        versionSpec: 3.9

    - script: |
        brew upgrade sqlite3
      displayName: 'prepare for electrumsv'

    - script: |
        set -e
        python3 -m pip install wheel
        python3 -m pip install -e .
        python3 -m pip install pytest pytest-cov
      displayName: 'install electrumsv-sdk'

    - script: |
        set -e
        electrumsv-sdk config --sdk-home-dir=$(MODIFIED_SDK_HOME_DIR)
      displayName: 'configure for portable sdk-home-dir'

    - script: |
        set -e
        brew install node
      displayName: 'prepare node.js'

    - script: |
        set -e
        electrumsv-sdk install node
        electrumsv-sdk install electrumx
        electrumsv-sdk install electrumsv
        electrumsv-sdk install whatsonchain
        electrumsv-sdk install merchant_api
      displayName: 'install all components'

    - script: |
        set -e
        electrumsv-sdk start --background status_monitor
        electrumsv-sdk start --background --new node
        electrumsv-sdk start --background --new electrumx
        electrumsv-sdk start --background --new --deterministic-seed electrumsv
        electrumsv-sdk node generate 1
        electrumsv-sdk start --background whatsonchain
        electrumsv-sdk start --background merchant_api
        electrumsv-sdk status
        python3 ./contrib/check_all_started.py
      displayName: 'start all components'
      continueOnError: true

    - script: |
        set -e
        electrumsv-sdk stop node
        electrumsv-sdk stop electrumx
        electrumsv-sdk stop electrumsv
        electrumsv-sdk stop whatsonchain
        electrumsv-sdk stop status_monitor
        electrumsv-sdk stop merchant_api
        electrumsv-sdk status
        python3 ./contrib/check_all_stopped.py
      displayName: 'stop all components'
      continueOnError: true

    - script: |
        set -e
        sleep 5
        electrumsv-sdk reset
        electrumsv-sdk status
      displayName: 'reset all components'
      continueOnError: true

    - script: |
        set -e
        sleep 5
        electrumsv-sdk reset --id=node1 node
        electrumsv-sdk reset --id=electrumx1 electrumx
        electrumsv-sdk reset --id=electrumsv1 --deterministic-seed electrumsv
        electrumsv-sdk status
      displayName: 'reset by id'
      continueOnError: true

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: $(NEW_LOG_DIR)
        artifactName: 'MacOSXLogs'
      displayName: 'Publish logs'

- job: TestWindows

  pool:
    vmImage: 'windows-latest'

  services:
    postgres: pg12-win32

  variables:
    MODIFIED_SDK_HOME_DIR: $(Agent.HomeDirectory)\my_portable_sdk_datadir
    NEW_LOG_DIR: $(Agent.HomeDirectory)\my_portable_sdk_datadir\logs
    SDK_LOG_LEVEL: DEBUG

  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: 3.9
        addToPath: true
        architecture: 'x64'

    # need to add python Scripts/ dir to PATH to find 'electrumsv-sdk' command
    - pwsh: |
        $scripts_dir = py -3.9 -c "import os, sys, pathlib;print(pathlib.Path(sys.executable).parent.joinpath(r'Scripts'));"
        $env:PATH += $scripts_dir
        py -3.9 -m pip install --upgrade pip
        py -3.9 -m pip install wheel
        py -3.9 -m pip install -e .
        py -3.9 -m pip install pytest pytest-cov
      displayName: 'install electrumsv-sdk'

    - script: |
        set -e
        electrumsv-sdk config --sdk-home-dir=$(MODIFIED_SDK_HOME_DIR)
      displayName: 'configure for portable sdk-home-dir'

    - script: |
        cd $(Build.Repository.LocalPath)/contrib/azure
        python3 -m pip install asyncpg
        python3 ./mapi_db_config.py
      displayName: 'prepare postgres'

    - script: |
        electrumsv-sdk install node
        electrumsv-sdk install electrumx
        electrumsv-sdk install electrumsv
        electrumsv-sdk install whatsonchain
        electrumsv-sdk install merchant_api
      displayName: 'install all components'

    - script: |
        electrumsv-sdk start --background status_monitor
        electrumsv-sdk start --background --new node
        electrumsv-sdk start --background --new electrumx
        electrumsv-sdk start --background --new --deterministic-seed electrumsv
        electrumsv-sdk node generate 1
        electrumsv-sdk start --background whatsonchain
        electrumsv-sdk start --background merchant_api
        electrumsv-sdk status
        python3 ./contrib/check_all_started.py
      displayName: 'start all components'
      continueOnError: true

    - script: |
        electrumsv-sdk stop node
        electrumsv-sdk stop electrumx
        electrumsv-sdk stop electrumsv
        electrumsv-sdk stop whatsonchain
        electrumsv-sdk stop status_monitor
        electrumsv-sdk stop merchant_api
        electrumsv-sdk status
        python3 ./contrib/check_all_stopped.py
      displayName: 'stop all components'
      continueOnError: true

    - script: |
        sleep 5
        electrumsv-sdk reset
        electrumsv-sdk status
      displayName: 'reset all components'
      continueOnError: true

    - script: |
        sleep 5
        electrumsv-sdk reset --id=node1 node
        electrumsv-sdk reset --id=electrumx1 electrumx
        electrumsv-sdk reset --id=electrumsv1 --deterministic-seed electrumsv
        electrumsv-sdk status
      displayName: 'reset by id'
      continueOnError: true

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: $(NEW_LOG_DIR)
        artifactName: 'WindowsLogs'
      displayName: 'Publish logs'


- job: TestWindowsPortableMode

  pool:
    vmImage: 'windows-latest'

  services:
    postgres: pg12-win32

  variables:
    MODIFIED_SDK_HOME_DIR: $(Agent.ToolsDirectory)\SDK_HOME_DIR
    NEW_LOG_DIR: $(Agent.ToolsDirectory)\SDK_HOME_DIR\logs
    SDK_LOG_LEVEL: DEBUG

  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: 3.9
        addToPath: true
        architecture: 'x64'

    # need to add python Scripts/ dir to PATH to find 'electrumsv-sdk' command
    - pwsh: |
        $scripts_dir = py -3.9 -c "import os, sys, pathlib;print(pathlib.Path(sys.executable).parent.joinpath(r'Scripts'));"
        $env:PATH += $scripts_dir
        py -3.9 -m pip install --upgrade pip
        py -3.9 -m pip install wheel
        py -3.9 -m pip install -e .
        py -3.9 -m pip install pytest pytest-cov
      displayName: 'install electrumsv-sdk'

    - script: |
        set -e
        mkdir -p $(Agent.ToolsDirectory)\SDK_HOME_DIR
        electrumsv-sdk config --portable=True
      displayName: 'Turn on portable mode (searches for "SDK_HOME_DIR"'

    - script: |
        cd $(Build.Repository.LocalPath)/contrib/azure
        python3 -m pip install asyncpg
        python3 ./mapi_db_config.py
      displayName: 'prepare postgres'

    - script: |
        electrumsv-sdk install node
        electrumsv-sdk install electrumx
        electrumsv-sdk install electrumsv
        electrumsv-sdk install whatsonchain
        electrumsv-sdk install merchant_api
      displayName: 'install all components'

    - script: |
        electrumsv-sdk start --background status_monitor
        electrumsv-sdk start --background --new node
        electrumsv-sdk start --background --new electrumx
        electrumsv-sdk start --background --new --deterministic-seed electrumsv
        electrumsv-sdk node generate 1
        electrumsv-sdk start --background whatsonchain
        electrumsv-sdk start --background merchant_api
        electrumsv-sdk status
        python3 ./contrib/check_all_started.py
      displayName: 'start all components'
      continueOnError: true

    - script: |
        electrumsv-sdk stop node
        electrumsv-sdk stop electrumx
        electrumsv-sdk stop electrumsv
        electrumsv-sdk stop whatsonchain
        electrumsv-sdk stop status_monitor
        electrumsv-sdk stop merchant_api
        electrumsv-sdk status
        python3 ./contrib/check_all_stopped.py
      displayName: 'stop all components'
      continueOnError: true

    - script: |
        sleep 5
        electrumsv-sdk reset
        electrumsv-sdk status
      displayName: 'reset all components'
      continueOnError: true

    - script: |
        sleep 5
        electrumsv-sdk reset --id=node1 node
        electrumsv-sdk reset --id=electrumx1 electrumx
        electrumsv-sdk reset --id=electrumsv1 --deterministic-seed electrumsv
        electrumsv-sdk status
      displayName: 'reset by id'
      continueOnError: true

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: $(NEW_LOG_DIR)
        artifactName: 'WindowsPortableModeLogs'
      displayName: 'Publish logs'


# Peace of mind that there is no conflict with previously installed SDK version.
- job: TestWindowsVersionMigration

  pool:
    vmImage: 'windows-latest'

  services:
    postgres: pg12-win32

  variables:
    LOG_DIR:                C:\Users\VssAdministrator\AppData\Local\ElectrumSV-SDK\logs
    SDK_LOG_LEVEL:          INFO
    PREVIOUS_SDK_VERSION:   0.0.36

  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: 3.9
        addToPath: true
        architecture: 'x64'

    # need to add python Scripts/ dir to PATH to find 'electrumsv-sdk' command
    - pwsh: |
        $scripts_dir = py -3.9 -c "import os, sys, pathlib;print(pathlib.Path(sys.executable).parent.joinpath(r'Scripts'));"
        $env:PATH += $scripts_dir
        py -3.9 -m pip install --upgrade pip
        py -3.9 -m pip install wheel
        py -3.9 -m pip install electrumsv-sdk==$(PREVIOUS_SDK_VERSION)
        py -3.9 -m pip install pytest pytest-cov
      displayName: 'install electrumsv-sdk'

# Todo - uncomment this when PREVIOUS_SDK_VERSION>=0.0.37
#    - script: |
#        set -e
#        electrumsv-sdk config --sdk-home-dir=$(MODIFIED_SDK_HOME_DIR)
#      displayName: 'configure for portable sdk-home-dir'

# Todo - add back merchant_api testing from install/start/stop/reset when PREVIOUS_SDK_VERSION>=0.0.37

    - script: |
        cd $(Build.Repository.LocalPath)/contrib/azure
        python3 -m pip install asyncpg
        python3 ./mapi_db_config.py
      displayName: 'prepare postgres'

    - script: |
        electrumsv-sdk install node
        electrumsv-sdk install electrumx
        electrumsv-sdk install electrumsv
        electrumsv-sdk install whatsonchain

      displayName: 'install all components'

    - script: |
        electrumsv-sdk start --background status_monitor
        electrumsv-sdk start --background --new node
        electrumsv-sdk start --background --new electrumx
        electrumsv-sdk start --background --new --deterministic-seed electrumsv
        electrumsv-sdk node generate 1
        electrumsv-sdk start --background whatsonchain

        electrumsv-sdk status
        python3 ./contrib/check_all_started.py
      displayName: 'start all components'
      continueOnError: true

    - script: |
        electrumsv-sdk stop node
        electrumsv-sdk stop electrumx
        electrumsv-sdk stop electrumsv
        electrumsv-sdk stop whatsonchain
        electrumsv-sdk stop status_monitor

        electrumsv-sdk status
        python3 ./contrib/check_all_stopped.py
      displayName: 'stop all components'
      continueOnError: true

    - script: |
        sleep 5
        electrumsv-sdk reset node
        electrumsv-sdk reset electrumx
        electrumsv-sdk reset electrumsv
        electrumsv-sdk reset whatsonchain
        electrumsv-sdk reset status_monitor

        electrumsv-sdk status
      displayName: 'reset all components'
      continueOnError: true

    - script: |
        sleep 5
        electrumsv-sdk reset --id=node1 node
        electrumsv-sdk reset --id=electrumx1 electrumx
        electrumsv-sdk reset --id=electrumsv1 --deterministic-seed electrumsv
        electrumsv-sdk status
      displayName: 'reset by id'
      continueOnError: true

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: $(LOG_DIR)
        artifactName: 'WindowsMigrationLogs'
      displayName: 'Publish logs'
      continueOnError: true


- job: BuildMacOS
  pool: {vmImage: 'macOS-10.15'}
  steps:
    - script: |
        python3 -m pip install --upgrade pip
        python3 -m pip install wheel
        python3 setup.py build bdist_wheel --plat-name macosx_10_5_x86_64 --dist-dir ./wheelhouse

    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: 'MacOS'
        pathtoPublish: 'wheelhouse'
      displayName: 'build wheel macos'

- job: BuildWindows
  pool: {vmImage: 'windows-latest'}
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: 3.9

    - script: |
        py -3 -m pip install --upgrade pip
        py -3 -m pip install wheel
        py -3 .\setup.py build bdist_wheel --plat-name win-amd64 --dist-dir ./wheelhouse

    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: 'Windows'
        pathtoPublish: 'wheelhouse'
      displayName: 'build wheel windows'


- job: BuildLinux
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: 3.9

    - bash: |
        python3 -m pip install --upgrade pip
        python3 -m pip install wheel
        python3 setup.py build bdist_wheel --plat-name manylinux2014_x86_64 --dist-dir ./wheelhouse

    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: 'Linux'
        pathtoPublish: 'wheelhouse'
      displayName: 'build wheel linux'
